parameters:
  condition: true

steps:
- template: init-docker-linux.yml
  parameters:
    setupImageBuilder: false
    setupTestRunner: true
    condition: ${{ parameters.condition }}
- script: |
    echo "##vso[task.setvariable variable=testRunner.container]testrunner-$(Build.BuildId)-$(System.JobId)"

    optionalTestArgs=""
    echo "##vso[task.setvariable variable=optionalTestArgs]$optionalTestArgs"
  displayName: Set Test Variables
  condition: and(succeeded(), ${{ parameters.condition }})
- script: >
    docker run -t -d
    -v /var/run/docker.sock:/var/run/docker.sock
    --name $(testRunner.container)
    $(imageNames.testRunner.withrepo)
  displayName: Start Test Runner Container
  condition: and(succeeded(), ${{ parameters.condition }})
- script: >
    docker exec $(testRunner.container) pwsh
    -File $(testScriptPath)
    -Version '$(productVersion)'
    -OS '$(osVariant)'
    -Architecture '$(architecture)'
    $(optionalTestArgs)
  displayName: Test Images
  condition: and(succeeded(), ${{ parameters.condition }})
- ${{ if eq(variables['System.TeamProject'], parameters.internalProjectName) }}:
  - script: docker exec $(testRunner.container) docker logout $(acr.server)
    displayName: Docker logout
    condition: and(always(), ${{ parameters.condition }})
    continueOnError: true
- script: >
    docker cp
    $(testRunner.container):/repo/$(testResultsDirectory)
    $(Common.TestResultsDirectory)/.
  displayName: Copy Test Results
  condition: and(always(), ${{ parameters.condition }})
  continueOnError: true
